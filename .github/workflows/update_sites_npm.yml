name: Update NPM Package on hosts using Github APP

on:
  workflow_call:
    inputs:
      new_version:
        type: string
        required: true
      repos_to_update:
        type: string
        required: true
      package_name:
        type: string
        required: true
      wix_site:
          type: boolean
          required: false
          default: true
    secrets:
      GH_APP_ID:
        required: true
      GH_APP_PRIVATE_KEY:
        required: true
      WIX_CLI_API_KEY:
        required: true
      NPM_TOKEN:
        required: true

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{ fromJSON(inputs.repos_to_update) }}

    steps:
      - name: Set up jq (to parse JSON)
        run: sudo apt-get install -y jq

      - name: Generate JWT and get installation ID
        id: get_installation_id
        uses: actions/github-script@v6
        with:
          script: |
            const { GH_APP_ID, GH_APP_PRIVATE_KEY, repo } = process.env;
            const owner = repo.split('/')[0];
            const { createAppAuth } = require("@octokit/auth-app");
            const appAuth = createAppAuth({
              appId: GH_APP_ID,
              privateKey: GH_APP_PRIVATE_KEY,
            });
            const appAuthentication = await appAuth({ type: "app" });
            const jwtToken = appAuthentication.token;
            console.log("JWT Token generated successfully.");

            const octokit = github.getOctokit(jwtToken);
            console.log(`Fetching installations for owner: ${owner}`);
            const { data: installations } = await octokit.rest.apps.listInstallations();

            const installation = installations.find(inst => inst.account.login === owner);
            if (!installation) {
              console.error(`❌ Error: No installation found for owner ${owner}`);
              throw new Error(`No installation found for owner ${owner}`);
            }

            const installationId = installation.id;
            console.log(`✅ Found installation ID: ${installationId} for ${owner}`);
            core.setOutput('installation_id', installationId);
            core.setOutput('jwt_token', jwtToken);
        env:
          GH_APP_ID: ${{ secrets.GH_APP_ID }}
          GH_APP_PRIVATE_KEY: ${{ secrets.GH_APP_PRIVATE_KEY }}
          repo: ${{ matrix.repo }}
      
      - name: Generate installation token
        id: generate_installation_token
        run: |
          installation_id=${{ steps.get_installation_id.outputs.installation_id }}
          jwt_token=${{ steps.get_installation_id.outputs.jwt_token }}
          echo "Generating installation token for installation ID: $installation_id"
          token_response=$(curl -sSL -X POST \
            -H "Authorization: Bearer $jwt_token" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/app/installations/$installation_id/access_tokens")
          echo "Raw token response:"
          echo "$token_response" | jq .
          token=$(echo "$token_response" | jq -r '.token')
          if [[ -z "$token" || "$token" == "null" ]]; then
            echo "❌ Error: Failed to generate installation token"
            echo "Response: $token_response"
            exit 1
          fi
          echo "Installation token generated."
          echo "installation_token=$token" >> $GITHUB_OUTPUT


      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repo }}
          token: ${{ steps.generate_installation_token.outputs.installation_token }}
          ref: main

      - name: Setup NPM auth
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          echo "NPM auth file created at ~/.npmrc"

      - name: Install dependencies
        run: npm ci

      - name: Install Wix CLI
        if: ${{ inputs.wix_site }}
        run: npm install -g @wix/cli

      - name: Login to Wix
        if: ${{ inputs.wix_site }}
        run: wix login --api-key ${{ secrets.WIX_CLI_API_KEY }}

      - name: Bump NPM package version
        run: |
          echo "Updating package ${{ inputs.package_name }} to version ${{ inputs.new_version }}"
          npm install ${{ inputs.package_name }}@${{ inputs.new_version }} --save-exact
          if [ "${{ inputs.wix_site }}" = "true" ]; then
            echo "Running wix install..."
            wix install
          fi

      - name: Add changes to git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          echo "Adding files to git..."
          git add package.json package-lock.json
          if [ "${{ inputs.wix_site }}" = "true" ]; then
            git add wix.lock
          fi

      - name: Create Pull Request 
        id: create-pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.generate_installation_token.outputs.installation_token }}
          commit-message: "fix: update ${{ inputs.package_name }} to v${{ inputs.new_version }}"
          title: "fix: update ${{ inputs.package_name }} to v${{ inputs.new_version }}"
          body: "Bumps the version of ${{ inputs.package_name }} to `v${{ inputs.new_version }}` to bring it up to date."
          branch: "update-${{ inputs.package_name }}-v${{ inputs.new_version }}"